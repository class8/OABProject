<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oab.client.member.dao.MemberDao">
	<select id="securitySelect" parameterType="String"
		resultType="security">
		select mt_id, salt from SECURITY_TBL
		where mt_id=#{mt_id}
	</select>

	<insert id="securityInsert" parameterType="security">
		insert into
		SECURITY_TBL(mt_id, salt)
		values(#{mt_id}, #{salt})
	</insert>

	<delete id="securityDelete" parameterType="String">
		delete from
		SECURITY_TBL
		where mt_id = #{mt_id}
	</delete>
	<!--아이디 찾기위한 select -->
	<select id="memberIdselect" parameterType="String"
		resultType="member">

		select REPLACE(mt_id, substr(mt_id, 2,3), '**') as "mt_id"
		, mt_email
		from
		MEMBER_TBL
		where mt_email =
		#{mt_email} and mt_name =
		#{mt_name}
	</select>

	<select id="memberSelect" parameterType="String"
		resultType="member">
		select mt_number, mt_id, mt_pw, mt_name, mt_birth,
		mt_gender, mt_email, mt_phone
		from MEMBER_TBL
		where mt_id = #{mt_id}
	</select>
	<select id="mt_EmailConfirm" parameterType="String"
		resultType="member">
		select mt_number, mt_id, mt_pw, mt_name, mt_birth,
		mt_gender, mt_email, mt_phone
		from MEMBER_TBL
		where mt_email = #{mt_email}
	</select>

	<!-- <update id="memberPwUpdate" parameterType="member"> update member_tbl 
		set mt_pw=#{mt_pw} where mt_number=#{mt_number} </update> -->

	<insert id="memberInsert" parameterType="member">

		<selectKey keyProperty="mt_number" resultType="int"
			order="BEFORE">
			select
			MEMBER_SEQ.nextval from dual
		</selectKey>
		insert into MEMBER_TBL(mt_number, mt_id, mt_pw, mt_name, mt_birth,
		mt_gender, mt_email,
		mt_phone, mt_disabled)
		values(#{mt_number},
		#{mt_id}, #{mt_pw},
		#{mt_name}, #{mt_birth}, #{mt_gender}, #{mt_email},
		#{mt_phone}, 'able')
	</insert>

	<update id="memberUpdate" parameterType="member">
		update MEMBER_TBL set
		<if test="mt_pw != null and mt_pw != ''">
			mt_pw=#{mt_pw},
		</if>
		mt_name=#{mt_name}, mt_birth=#{mt_birth}, mt_gender=#{mt_gender},
		mt_email=#{mt_email}, mt_phone=#{mt_phone}
		where mt_id=#{mt_id}
	</update>

	<select id="UserInfoListTotal" parameterType="UserInfo"
		resultType="int">
		SELECT nvl(count(rest_bnumber),0) as cnt
		from (SELECT list.* , ROWNUM
		AS RNUM FROM
		( select * from RESERVATION_TBL)
		list)
		
		WHERE mt_id = #{mt_id}
		
	</select>
	
	<select id="UserInfoListCnt" parameterType="UserInfo"
		resultType="int">
		SELECT nvl(count(rest_bnumber),0) as cnt
		from (SELECT list.* , ROWNUM
		AS RNUM FROM
		( select * from RESERVATION_TBL )
		list)
		<if test="start_row != null and start_row != ''">
			<if test="end_row != null and end_row != ''">
				<where>
					RNUM BETWEEN #{start_row} AND #{end_row}
				</where>
			</if>
		</if>
	</select>

	<select id="RentalInfoListCnt" parameterType="Rental"
		resultType="int">
		SELECT nvl(count(rest_number),0) as cnt
		from RENTAL_TBL

	</select>


	<select id="memberUserInfo" parameterType="UserInfo"
		resultType="UserInfo">
		select r.REST_NUMBER, r.rest_bnumber, p.PT_NAME, r.REST_COUNT,
		r.REST_PAYOPTION, p.PT_PRICE, r.REST_REGDATE, r.REST_TOTAL,
		r.REST_STATUS
		FROM(SELECT list.* , ROWNUM AS RNUM FROM(select * from
		RESERVATION_TBL)
		list) r,
		product_tbl p, member_tbl m WHERE r.pt_number
		= p.pt_number and
		r.mt_id= m.mt_id and r.mt_id = #{mt_id}
		<if test="start_row != null and start_row != ''">
			<if test="end_row != null and end_row != ''">
				and RNUM BETWEEN #{start_row} AND #{end_row}
			</if>
		</if>
		order by r.rest_bnumber desc
	</select>

	<select id="memberrentalInfo" parameterType="Rental"
		resultType="Rental">
		select re.RENT_NUMBER, r.rest_status,
		re.rent_overtime,
		re.rent_addcost, to_char(re.rent_actrent,
		'YYYY/MM/DD') AS
		rent_actrent, to_char(re.rent_expretrun,
		'YYYY/MM/DD') AS
		rent_expretrun, to_char(re.rent_actretrun,
		'YYYY/MM/DD') AS
		rent_actretrun, re.RENT_STATUS
		FROM(SELECT list.* , ROWNUM AS RNUM FROM(select * from
		RENTAL_TBL)
		list) re, RESERVATION_TBL r, member_tbl m
		WHERE r.rest_number = re.rest_number and r.mt_id= m.mt_id and r.mt_id =
		#{mt_id}
		<if test="start_row != null and start_row != ''">
			<if test="end_row != null and end_row != ''">
				and RNUM BETWEEN #{start_row} AND #{end_row}
			</if>
		</if>
		ORDER BY
		r.rest_number desc
	</select>
	<update id="UserInfoUpdate" parameterType="UserInfo">
		update RESERVATION_TBL set
		REST_STATUS =
		CASE
		WHEN REST_PAYOPTION='계좌이체'
		THEN '예약취소'
		WHEN
		REST_PAYOPTION='카드' THEN
		'환불요청'
		ELSE '처리중'
		END
		WHERE
		rest_number= #{rest_number}
	</update>

	<update id="memberSecede" parameterType="member">
		update MEMBER_TBL set
		mt_DISABLED = 'disable'
		where mt_id=#{mt_id}
	</update>

	<update id="memberPwUpdate" parameterType="member">
		update MEMBER_TBL set
		mt_pw=#{mt_pw}
		where mt_id=#{mt_id}
	</update>

	<update id="securityPwUpdate" parameterType="member">
		update security_tbl
		set
		salt=#{salt}
		where mt_id=#{mt_id}
	</update>

</mapper>